name: Verify Node.js

on:
  push:
    branches: [main]

permissions:
  contents: read
  pull-requests: read

jobs:
  lint-backend:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [20.x]
    name: Lint Backend (v${{ matrix.node-version }})
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: pnpm install --frozen-lockfile
        working-directory: ./api/releaseminder-api
      - name: Lint (v${{ matrix.node-version }})
        working-directory: ./api/releaseminder-api
        run: pnpm run lint

  build-backend:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [20.x]
    name: Build Backend (v${{ matrix.node-version }})
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: pnpm install --frozen-lockfile
        working-directory: ./api/releaseminder-api
      - name: Build (v${{ matrix.node-version }})
        working-directory: ./api/releaseminder-api
        run: pnpm run build

  test-backend:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [20.x]
    name: Test Backend (v${{ matrix.node-version }})
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: pnpm install --frozen-lockfile
        working-directory: ./api/releaseminder-api
      - name: Test (v${{ matrix.node-version }})
        working-directory: ./api/releaseminder-api
        run: pnpm run test

  sonarcloud-analysis-backend:
    name: SonarCloud Backend (v${{ matrix.node-version }})
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Dependencies
        working-directory: ./api/releaseminder-api
        run: pnpm install --frozen-lockfile
      - name: Run Tests
        working-directory: ./api/releaseminder-api
        run: pnpm run test:cov
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: api/releaseminder-api
          args: -Dsonar.projectKey=jonathan-lee-devel_releaseminder-api
            -Dsonar.organization=jonathan-lee-devel
            -Dsonar.sources=apps,libs
            -Dsonar.tests=apps,libs
            -Dsonar.inclusions=**/*.ts
            -Dsonar.exclusions=**/*.spec.ts,**/*.module.ts,**/main.ts
            -Dsonar.test.inclusions=**/*.spec.ts
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.qualitygate.wait=true

  lint-frontend:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [ 20.x ]
    name: Lint Frontend (v${{ matrix.node-version }})
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: pnpm install --frozen-lockfile
        working-directory: ./ui/releaseminder-ui
      - name: Lint (v${{ matrix.node-version }})
        working-directory: ./ui/releaseminder-ui
        run: pnpm run lint

  build-frontend:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [ 20.x ]
    name: Build Frontend (v${{ matrix.node-version }})
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: pnpm install --frozen-lockfile
        working-directory: ./ui/releaseminder-ui
      - name: Build Staging (v${{ matrix.node-version }})
        working-directory: ./ui/releaseminder-ui
        run: pnpm run build:stage
      - name: Build (v${{ matrix.node-version }})
        working-directory: ./ui/releaseminder-ui
        run: pnpm run build

  test-frontend:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [ 20.x ]
    name: Test Frontend (v${{ matrix.node-version }})
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: pnpm install --frozen-lockfile
        working-directory: ./ui/releaseminder-ui
      - name: Test (v${{ matrix.node-version }})
        working-directory: ./ui/releaseminder-ui
        run: pnpm run test

  sonarcloud-analysis-frontend:
    name: SonarCloud Frontend (v${{ matrix.node-version }})
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [ 20.x ]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Dependencies
        working-directory: ./ui/releaseminder-ui
        run: pnpm install --frozen-lockfile
      - name: Run Tests
        working-directory: ./ui/releaseminder-ui
        run: pnpm run test
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: ui/releaseminder-ui
          args: -Dsonar.projectKey=jonathan-lee-devel_releaseminder-ui
            -Dsonar.organization=jonathan-lee-devel
            -Dsonar.sources=src
            -Dsonar.tests=src
            -Dsonar.inclusions=**
            -Dsonar.exclusions=**/*.spec.ts,**.module.ts,src/main.ts
            -Dsonar.test.inclusions=src/**/*.spec.ts
            -Dsonar.javascript.lcov.reportPaths=coverage/releaseminder-ui/lcov.info
            -Dsonar.qualitygate.wait=true

  deploy-railway-production-ui:
    needs: [ lint-backend, lint-frontend, build-backend, build-frontend, test-backend, test-frontend, sonarcloud-analysis-backend, sonarcloud-analysis-frontend ]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Use Node 20
        uses: actions/setup-node@v1
        with:
          node-version: 20.x
      - name: Install packages
        run: pnpm install --frozen-lockfile
        working-directory: ./ui/releaseminder-ui
      - name: Install Railway
        run: npm i -g @railway/cli
      - name: Deploy API
        run: railway up --service ui
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_PRODUCTION_TOKEN }}

  deploy-railway-production-api:
    needs: [lint-backend, lint-frontend, build-backend, build-frontend, test-backend, test-frontend, sonarcloud-analysis-backend, sonarcloud-analysis-frontend]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Use Node 20
        uses: actions/setup-node@v1
        with:
          node-version: 20.x
      - name: Install packages
        run: pnpm install --frozen-lockfile
        working-directory: ./api/releaseminder-api
      - name: Install Railway
        run: npm i -g @railway/cli
      - name: Deploy API
        run: railway up --service api
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_PRODUCTION_TOKEN }}

  deploy-railway-production-build-systems:
    needs: [ lint-backend, lint-frontend, build-backend, build-frontend, test-backend, test-frontend, sonarcloud-analysis-backend, sonarcloud-analysis-frontend ]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Use Node 20
        uses: actions/setup-node@v1
        with:
          node-version: 20.x
      - name: Install packages
        run: pnpm install --frozen-lockfile
        working-directory: ./api/releaseminder-api
      - name: Install Railway
        run: npm i -g @railway/cli
      - name: Deploy Build-Systems
        run: railway up --service build-systems
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_PRODUCTION_TOKEN }}

  deploy-railway-production-clients:
    needs: [ lint-backend, lint-frontend, build-backend, build-frontend, test-backend, test-frontend, sonarcloud-analysis-backend, sonarcloud-analysis-frontend ]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Use Node 20
        uses: actions/setup-node@v1
        with:
          node-version: 20.x
      - name: Install packages
        run: pnpm install --frozen-lockfile
        working-directory: ./api/releaseminder-api
      - name: Install Railway
        run: npm i -g @railway/cli
      - name: Deploy Clients
        run: railway up --service clients
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_PRODUCTION_TOKEN }}

  deploy-railway-production-comms:
    needs: [ lint-backend, lint-frontend, build-backend, build-frontend, test-backend, test-frontend, sonarcloud-analysis-backend, sonarcloud-analysis-frontend ]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Use Node 20
        uses: actions/setup-node@v1
        with:
          node-version: 20.x
      - name: Install packages
        run: pnpm install --frozen-lockfile
        working-directory: ./api/releaseminder-api
      - name: Install Railway
        run: npm i -g @railway/cli
      - name: Deploy Comms
        run: railway up --service comms
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_PRODUCTION_TOKEN }}

  deploy-railway-production-issues:
    needs: [ lint-backend, lint-frontend, build-backend, build-frontend, test-backend, test-frontend, sonarcloud-analysis-backend, sonarcloud-analysis-frontend ]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Use Node 20
        uses: actions/setup-node@v1
        with:
          node-version: 20.x
      - name: Install packages
        run: pnpm install --frozen-lockfile
        working-directory: ./api/releaseminder-api
      - name: Install Railway
        run: npm i -g @railway/cli
      - name: Deploy Issues
        run: railway up --service issues
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_PRODUCTION_TOKEN }}

  deploy-railway-production-payments:
    needs: [ lint-backend, lint-frontend, build-backend, build-frontend, test-backend, test-frontend, sonarcloud-analysis-backend, sonarcloud-analysis-frontend ]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Use Node 20
        uses: actions/setup-node@v1
        with:
          node-version: 20.x
      - name: Install packages
        run: pnpm install --frozen-lockfile
        working-directory: ./api/releaseminder-api
      - name: Install Railway
        run: npm i -g @railway/cli
      - name: Deploy Payments
        run: railway up --service payments
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_PRODUCTION_TOKEN }}

  deploy-railway-production-releases:
    needs: [ lint-backend, lint-frontend, build-backend, build-frontend, test-backend, test-frontend, sonarcloud-analysis-backend, sonarcloud-analysis-frontend ]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Use Node 20
        uses: actions/setup-node@v1
        with:
          node-version: 20.x
      - name: Install packages
        run: pnpm install --frozen-lockfile
        working-directory: ./api/releaseminder-api
      - name: Install Railway
        run: npm i -g @railway/cli
      - name: Deploy Releases
        run: railway up --service releases
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_PRODUCTION_TOKEN }}

  deploy-railway-production-source-control:
    needs: [ lint-backend, lint-frontend, build-backend, build-frontend, test-backend, test-frontend, sonarcloud-analysis-backend, sonarcloud-analysis-frontend ]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Use Node 20
        uses: actions/setup-node@v1
        with:
          node-version: 20.x
      - name: Install packages
        run: pnpm install --frozen-lockfile
        working-directory: ./api/releaseminder-api
      - name: Install Railway
        run: npm i -g @railway/cli
      - name: Deploy Source-Control
        run: railway up --service source-control
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_PRODUCTION_TOKEN }}

  playwright-test:
    needs: [ deploy-railway-production-api, deploy-railway-production-build-systems, deploy-railway-production-clients, deploy-railway-production-comms, deploy-railway-production-issues, deploy-railway-production-payments, deploy-railway-production-releases, deploy-railway-production-source-control, deploy-railway-production-ui ]
    timeout-minutes: 60
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Install dependencies
        working-directory: ./ui/releaseminder-ui
        run: pnpm install --frozen-lockfile
      - name: Install Playwright Browsers
        working-directory: ./ui/releaseminder-ui
        run: pnpm playwright install --with-deps
      - name: Run Playwright tests
        working-directory: ./ui/releaseminder-ui
        run: pnpm playwright test
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: ui/releaseminder-ui/playwright-report/
          retention-days: 30
    env:
      CI: true
      BASE_URL: 'https://www.releaseminder.io'
